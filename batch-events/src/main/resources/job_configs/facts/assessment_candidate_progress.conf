
transformed-assessment-candidate-progress = ${parquet-source-overwrite} {"path": ${s3.path}"/"${env}"/transformed/alef-candidate-assessment-progress"}
redshift-assessment-candidate-progress-sink = ${redshift} {"dbtable": ${redshift-staging-schema}".staging_candidate_assessment_progress"}
delta-assessment-candidate-progress-sink = ${delta-sink} {"path" = ${s3.delta.path}"/"${env}"/alef-candidate-assessment-progress"}

assessment-candidate-progress-transform {
    batch-job-id: "fact_candidate_assessment_progress"
    sources: ["candidate_assessment_progress", "candidate_assessment_outcome"]
    silver-table-name: "fact_candidate_assessment_progress"
    transformations: [
                           {
                             "operation": "addColIfNotExists"
                             "columns": ["totalTimespent", "finalScore", "finalGrade", "finalCategory", "finalUncertainty", "timeToReturn", "framework", "domains", "reportId"]
                             "target": ["integer", "integer", "integer", "string", "integer", "integer", "string", "string", "string"]
                           }
    ]
    column-mapping: {
          _trace_id: "_trace_id"
          _app_tenant: "tenant_id"
          eventType: "event_type"
          assessmentId: "assessment_id"
          sessionPeriodTag: "academic_year_tag"
          schoolId: "school_id"
          gradeId: "grade_id"
          candidateId: "candidate_id"
          candidateGroupId: "class_id"
          grade: "grade"
          materialType: "material_type"
          attemptNumber: "attempt_number"
          skill: "skill"
          subject: "subject"
          language: "language"
          status: "status"
          testLevelSessionId: "test_level_session_id"
          testLevel: "test_level"
          testId: "test_id"
          testVersion: "test_version"
          testLevelId: "test_level_id"
          testLevelVersion: "test_level_version"
          testLevelSectionId: "test_level_section_id"
          reportId: "report_id"
          totalTimespent: "total_timespent"
          finalScore: "final_score"
          finalGrade: "final_grade"
          finalCategory: "final_category"
          finalUncertainty: "final_uncertainty"
          timeToReturn: "time_to_return"
          framework: "framework",
          domains: "domains",
          occurredOn: "occurredOn"
    }
    sink: "transformed-assessment-candidate-progress"
}

redshift-assessment-candidate-progress {
    source: [
        "transformed-assessment-candidate-progress"
    ]
    sink: [
        "redshift-assessment-candidate-progress-sink"
    ]
    is-staging: true
    table-name: "staging_candidate_assessment_progress"
    exclude-columns: ["domains", "eventdate"]
    unique-ids: ["assessment_id", "status"]
    column-cast: {
             date_dw_id: "long"
            }
}

delta-assessment-candidate-progress {
    source: [
        "transformed-assessment-candidate-progress"
    ]
    sink: [
        "delta-assessment-candidate-progress-sink"
    ]
    unique-ids: ["assessment_id", "status"]
}
