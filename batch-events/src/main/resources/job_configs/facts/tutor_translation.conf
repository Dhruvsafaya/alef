parquet-tutor-translation-source = ${parquet-source} {"path": ${s3.path}"/"${env}"/processing/alef-tutor-translation"}
parquet-tutor-translation-sink = ${parquet-source} {"path": ${s3.path}"/"${env}"/data/alef-tutor-translation"}
transformed-tutor-translation = ${parquet-source-overwrite} {"path": ${s3.path}"/"${env}"/transformed/alef-tutor-translation"}
redshift-tutor-translation-sink = ${redshift} {"dbtable": ${redshift-staging-schema}".staging_tutor_translation"}
delta-tutor-translation-sink = ${delta-sink} {"path" = ${s3.delta.path}"/"${env}"/alef-tutor-translation"}
parquet-tutor-translation {
    source: [
        "parquet-tutor-translation-source"
    ]
    sink: [
        "parquet-tutor-translation-sink"
    ]
}


redshift-tutor-translation {
    sources: [
        "transformed-tutor-translation",
    ]
    sink: [
        "redshift-tutor-translation-sink"
    ]
}

delta-tutor-translation {
    sources: [
            "transformed-tutor-translation",
        ]
    sink: [
        "delta-tutor-translation-sink"
    ]
}

tutor-translation-transform {
    key: "fact_tutor_translation "
    source: "parquet-tutor-translation-source"
    entity: "ftt"
    column-mapping: {
        userId : "ftt_user_id",
        tenantId : "ftt_tenant_id",
        messageId : "ftt_message_id",
        sessionId : "ftt_session_id",
        conversationId : "ftt_conversation_id",
        translationLanguage: "ftt_translation_language",
        translation : "ftt_translation",
        occurredOn: "occurredOn"
    }
    sink: "transformed-tutor-translation"
}