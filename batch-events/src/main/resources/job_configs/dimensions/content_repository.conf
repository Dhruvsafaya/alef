  #ContentRepository
  parquet-content-repository-created-source= ${parquet-source} {path = ${s3.path}"/"${env}"/processing/alef-ccl-content-repository-created"}
  parquet-content-repository-updated-source= ${parquet-source} {path = ${s3.path}"/"${env}"/processing/alef-ccl-content-repository-updated"}
  parquet-content-repository-deleted-source= ${parquet-source} {path = ${s3.path}"/"${env}"/processing/alef-ccl-content-repository-deleted"}
  parquet-content-repository-created-sink= ${parquet-source} {path = ${s3.path}"/"${env}"/data/alef-ccl-content-repository-mutated/ContentRepositoryCreatedEvent"}
  parquet-content-repository-updated-sink= ${parquet-source} {path = ${s3.path}"/"${env}"/data/alef-ccl-content-repository-mutated/ContentRepositoryUpdatedEvent"}
  parquet-content-repository-deleted-sink= ${parquet-source} {path = ${s3.path}"/"${env}"/data/alef-ccl-content-repository-mutated/ContentRepositoryDeletedEvent"}
  parquet-content-repository-transform-created-sink=${parquet-source-overwrite} {path = ${s3.path}"/"${env}"/transformed/alef-ccl-content-repository-created"}
  parquet-content-repository-transform-updated-sink=${parquet-source-overwrite} {path = ${s3.path}"/"${env}"/transformed/alef-ccl-content-repository-updated"}
  parquet-content-repository-transform-deleted-sink=${parquet-source-overwrite} {path = ${s3.path}"/"${env}"/transformed/alef-ccl-content-repository-deleted"}
  content-repository-delta-sink=${delta-sink} {"path" = ${s3.delta.path}"/"${env}"/alef-ccl-content-repository"}
  content-repository-redshift-sink=${redshift} {"dbtable": ${redshift-schema}".dim_content_repository"}

      parquet-content-repository-created {
        source: [
          "parquet-content-repository-created-source",
        ]
        sink: [
          "parquet-content-repository-created-sink",
        ]
      }

      parquet-content-repository-updated {
            source: [
              "parquet-content-repository-updated-source",
            ]
            sink: [
              "parquet-content-repository-updated-sink",
            ]
       }

      parquet-content-repository-deleted {
            source: [
              "parquet-content-repository-deleted-source",
            ]
            sink: [
              "parquet-content-repository-deleted-sink",
            ]
      }

      redshift-content-repository-created-service {
             source: [
               "parquet-content-repository-transform-created-sink",
             ]
             sink: [
               "content-repository-redshift-sink"
             ]
             table-name: "dim_content_repository"
             match-conditions: "dim_content_repository.content_repository_id = temp_table.content_repository_id"
             entity-prefix: "content_repository"
             is-staging: false
           }

           redshift-content-repository-updated-service {
                  source: [
                    "parquet-content-repository-transform-updated-sink",
                  ]
                  sink: [
                    "content-repository-redshift-sink"
                  ]
                   event-name: "ContentRepositoryUpdatedEvent"
                   unique-ids: ["content_repository_id"]
                   entity-prefix: "content_repository"
                   is-staging: false
           }


           redshift-content-repository-deleted-service {
                  source: [
                    "parquet-content-repository-transform-deleted-sink"
                  ]
                  sink: [
                    "content-repository-redshift-sink"
                  ]
                   event-name: "ContentRepositoryDeletedEvent"
                   entity-prefix: "content_repository"
                   unique-ids: ["content_repository_id"]
                   is-staging: false
           }

           delta-content-repository-created-service {
                  source: [
                    "parquet-content-repository-transform-created-sink",
                  ]
                  sink: [
                    "content-repository-delta-sink"
                  ]
                  match-conditions: "delta.content_repository_id = events.content_repository_id"
                  entity-prefix: "content_repository"
                }

                delta-content-repository-updated-service {
                       source: [
                         "parquet-content-repository-transform-updated-sink",
                       ]
                       sink: [
                         "content-repository-delta-sink"
                       ]
                        match-conditions: "delta.content_repository_id = events.content_repository_id"
                        entity-prefix: "content_repository"

                }


                delta-content-repository-deleted-service {
                       source: [
                         "parquet-content-repository-transform-deleted-sink"
                       ]
                       sink: [
                         "content-repository-delta-sink"
                       ]
                        match-conditions: "delta.content_repository_id = events.content_repository_id"
                        entity-prefix: "content_repository"
                }



  content-repository-transform {
      created-source: ["parquet-content-repository-created-source"],
      updated-source: ["parquet-content-repository-updated-source"],
      deleted-source: ["parquet-content-repository-deleted-source"],
      created-sink: ["parquet-content-repository-transform-created-sink"],
      updated-sink: ["parquet-content-repository-transform-updated-sink"],
      deleted-sink: ["parquet-content-repository-transform-deleted-sink"],
      column-mapping: {
                      "id" : "content_repository_id",
                      "name" : "content_repository_name",
                      "organisation" : "content_repository_organisation_owner",
                      "createdById" : "content_repository_created_by_id",
                      "occurredOn" : "occurredOn",
                      "updatedById" : "content_repository_updated_by_id"
                      "content_repository_status" : "content_repository_status"
                      }
      entity: "content_repository",
      unique-ids: ["id"],
      key: "dim_content_repository"
    }
