{
  env: "test"
  s3: {
    bucket: ""
    root: ""
    path: ""
  }
  kafka: {
    "kafka.bootstrap.servers": ""
  }
  parquet: {
    "path": ""
    "trigger": ""
  }
  redshift: {
    "database": "bigdatadb"
    "url": ""
    "tempdir": ""
    "temporary_aws_access_key_id": ""
    "temporary_aws_secret_access_key": ""
  }

  redshift-schema: "rs_schema"
  redshift-staging-schema: "rs_stage_schema"

  batch-test-config {
      source: "bronze_table_name"
      sink: "v2-transformed-marketplace-purchase"
      batch-job-id: "test_batch_job_id"
      silver-table-name: "dim_test_table"
      transformations: [
           {
             "operation": "addColIfNotExists"
             "columns": ["col-double", "col-int"]
             "target": ["double", "integer"]
           },
           {
             "operation": "stringToTimestamp"
             "columns": ["occurredOn"]
           },
           {
             "operation": "explode"
             "columns": ["col-array"]
           },
           {
             "operation": "epochToTimestamp"
             "columns": ["col-epoch"]
           },
           {
             "operation": "rename"
             "columns": ["col-epoch"]
             "target": ["col-epoch-renamed"]
           }
      ]
  }

  batch-test-config-for-jsonstring {
        source: "source-path"
        sink: "v2-transformed-marketplace-purchase"
        batch-job-id: "test_batch_job_id"
        transformations: [
             {
               "operation": "jsonStringToArrayStruct"
               "columns": ["col-array"]
             }
        ]
    }

  delta-user-service {
    source: [
        "delta-user-service-source"
    ]
    sink: [
        "delta-user-service-sink"
    ]
    entity-prefix: "user"
    unique-ids: ["user_id", "user_id2"]
  }



  redshift-rel-user-service {
    source: [
        "transformed-staff-rel-user"
    ]
    sink: [
        "redshift-user-rel-staff"
    ]
    unique-ids: ["user_id"]
    table-name: "rel_user"
    is-staging: true
  }

  user-service {
    source: [
        "transformed-user-service"
    ]
    sink: [
        "redshift-user-service"
    ]
    table-name: "user_service"
    is-staging: true
    unique-ids: ["user_id"]
    column-cast: {
        user_date_dw_id: "long"
    }
  }
}
