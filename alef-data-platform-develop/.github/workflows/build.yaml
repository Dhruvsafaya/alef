name: "Build Compile Test"

concurrency:
  group: build-deploy-${{ github.ref == 'refs/heads/rc' && github.run_id || github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/pre-rc' && github.ref != 'refs/heads/rc' }}

on:
  pull_request:
    branches: [ develop, pre-rc, rc ]

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Check if files have changed
        id: check-changes
        uses: tj-actions/changed-files@v46
        with:
          files: |
            ./build.sbt
            ./core/**
            .build/**
            ./batch-events/**
            ./streaming-events/**
            ./ccl-streaming-events/**
      - name: Build and Test
        env:
          NEXUS_TOKEN_USR: ${{ secrets.NEXUS_REPO_USERNAME }}
          NEXUS_TOKEN_PSW: ${{ secrets.NEXUS_REPO_PASSWORD }}
          SBT_OPTS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=1G"
        if: ${{ steps.check-changes.outputs.any_changed == 'true' }}
        run: sbt clean update compile

  test-core:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Check if files have changed
        id: check-changes
        uses: tj-actions/changed-files@v46
        with:
          files: |
            ./build.sbt
            ./core/**
            .build/**
      - name: Test Core
        env:
          NEXUS_TOKEN_USR: ${{ secrets.NEXUS_REPO_USERNAME }}
          NEXUS_TOKEN_PSW: ${{ secrets.NEXUS_REPO_PASSWORD }}
          SBT_OPTS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=512m"
        if: ${{ steps.check-changes.outputs.any_changed == 'true' }}
        run: sbt "project core" update jacoco
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: core_jacoco
          path: core/target/scala-2.12/jacoco/report/

  test-batch-events:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: 'arn:aws:iam::368318908727:role/s3-github-access'
          role-skip-session-tagging: true
      - name: Check if files have changed
        id: check-changes
        uses: tj-actions/changed-files@v46
        with:
          files: |
            ./batch-events/**
            ./build.sbt
            ./core/**
            .build/**
      - name: Test Batch Events
        if: ${{ steps.check-changes.outputs.any_changed == 'true' }}
        env:
          NEXUS_TOKEN_USR: ${{ secrets.NEXUS_REPO_USERNAME }}
          NEXUS_TOKEN_PSW: ${{ secrets.NEXUS_REPO_PASSWORD }}
          SBT_OPTS: "-Xms3G -Xmx3G -XX:MaxMetaspaceSize=1G"
        run: sbt "project batch-events" update jacoco
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: batch-events_jacoco
          path: batch-events/target/scala-2.12/jacoco/report/

  test-streaming-events:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: 'arn:aws:iam::368318908727:role/s3-github-access'
          role-skip-session-tagging: true
      - name: Check if files have changed
        id: check-changes
        uses: tj-actions/changed-files@v46
        with:
          files: |
            ./streaming-events/**
            ./core/**
            ./build.sbt
            .build/**
      - name: Test Streaming Events
        if: ${{ steps.check-changes.outputs.any_changed == 'true' }}
        env:
          NEXUS_TOKEN_USR: ${{ secrets.NEXUS_REPO_USERNAME }}
          NEXUS_TOKEN_PSW: ${{ secrets.NEXUS_REPO_PASSWORD }}
          SBT_OPTS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=512m"
        run: sbt "project streaming-events" update jacoco
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: streaming-events_jacoco
          path: streaming-events/target/scala-2.12/jacoco/report/

  test-ccl-streaming-events:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: sbt/setup-sbt@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: 'arn:aws:iam::368318908727:role/s3-github-access'
          role-skip-session-tagging: true
      - name: Check if files have changed
        id: check-changes
        uses: tj-actions/changed-files@v46
        with:
          files: |
            ./ccl-streaming-events/**
            ./core/**
            ./build.sbt
            .build/**
      - name: Test CCL Streaming Events
        if: ${{ steps.check-changes.outputs.any_changed == 'true' }}
        env:
          NEXUS_TOKEN_USR: ${{ secrets.NEXUS_REPO_USERNAME }}
          NEXUS_TOKEN_PSW: ${{ secrets.NEXUS_REPO_PASSWORD }}
          SBT_OPTS: "-Xms2G -Xmx2G -XX:MaxMetaspaceSize=512m"
        run: sbt "project ccl-streaming-events" update jacoco
      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: ccl-streaming-events_jacoco
          path: ccl-streaming-events/target/scala-2.12/jacoco/report/

  sonarqube:
    runs-on: ubuntu-latest
    needs: [test-core, test-ccl-streaming-events, test-batch-events, test-streaming-events]
    env:
      CHANGE_ID: ${{ github.event.number || github.ref }}
      BRANCH_NAME: ${{ github.ref }}
      CHANGE_TARGET: ${{ github.base_ref || github.ref }}
      SONAR_TOKEN: ${{ secrets.SONAR_CLOUD_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Check if artifacts exist
        id: check_artifacts
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.ALEF_CI_DEVOPS_GITHUB_PAT }}
          script: |
            const runId = "${{ github.run_id }}"
            const artifacts = await github.rest.actions.listArtifactsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            const artifactNames = ['core_jacoco', 'batch-events_jacoco', 'ccl-streaming-events_jacoco', 'streaming-events_jacoco'];
            let result = {};            
            
            for (const name of artifactNames) {
              result[name] = artifacts.data.artifacts.some(artifact => {
                  return artifact.name === name && artifact.workflow_run.id == runId;
              });
            }
            return JSON.stringify(result);
      - name: Set output for artifacts
        id: set_output
        run: echo "::set-output name=artifacts::$(echo ${{ steps.check_artifacts.outputs.result }})"
      - name: Download JaCoCo report core
        if: ${{ fromJson(steps.set_output.outputs.artifacts)['core_jacoco'] }}
        uses: actions/download-artifact@v4
        with:
          name: core_jacoco
          path: core_jacoco/
      - name: Download JaCoCo report batch-events
        if: ${{ fromJson(steps.set_output.outputs.artifacts)['batch-events_jacoco'] }}
        uses: actions/download-artifact@v4
        with:
          name: batch-events_jacoco
          path: batch-events_jacoco/
      - name: Download JaCoCo report ccl-streaming-events
        if: ${{ fromJson(steps.set_output.outputs.artifacts)['ccl-streaming-events_jacoco'] }}
        uses: actions/download-artifact@v4
        with:
          name: ccl-streaming-events_jacoco
          path: ccl-streaming-events_jacoco/
      - name: Download JaCoCo report streaming-events
        if: ${{ fromJson(steps.set_output.outputs.artifacts)['streaming-events_jacoco'] }}
        uses: actions/download-artifact@v4
        with:
          name: streaming-events_jacoco
          path: streaming-events_jacoco/

      - name: SonarQube installation
        if: always()
        run: |
          curl -o sonar-scanner-cli.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.0.0.4432-linux.zip
          unzip sonar-scanner-cli.zip          
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            sonar-scanner-6.0.0.4432-linux/bin/sonar-scanner -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.pullrequest.key=$CHANGE_ID \
            -Dsonar.pullrequest.branch=$BRANCH_NAME \
            -Dsonar.pullrequest.base=$CHANGE_TARGET \
            -Dsonar.coverage.jacoco.xmlReportPaths=core_jacoco/jacoco.xml,batch-events_jacoco/jacoco.xml,ccl-streaming-events_jacoco/jacoco.xml,streaming-events_jacoco/jacoco.xml \
            -Dsonar.exclusions=core/src/main/scala/com/alefeducation/schema/**
          else
            sonar-scanner-6.0.0.4432-linux/bin/sonar-scanner -Dsonar.token=$SONAR_TOKEN \
            -Dsonar.coverage.jacoco.xmlReportPaths=core_jacoco/jacoco.xml,batch-events_jacoco/jacoco.xml,ccl-streaming-events_jacoco/jacoco.xml,streaming-events_jacoco/jacoco.xml \
            -Dsonar.exclusions=core/src/main/scala/com/alefeducation/schema/**
          fi
