name: Create release

on:
  push:
    branches: [rc]

permissions:
  contents: write

jobs:
  release:
    name: Release pushed tag
    runs-on: ubuntu-latest
    steps:
      - name: Get Latest Release
        id: get_latest_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          latest_tag=$(gh release list --repo "${{ github.repository }}" --limit 1 --json name --jq '.[0].name')
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Get Release Version
        id: get_release_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: |
            echo $latest_tag
            version=$(python -c "
            from datetime import datetime
            import re
            
            previous_tag = \"$latest_tag\"
            
            count = 1
            matches = []
            if(previous_tag != None):
              matches = re.findall(r'\d+', previous_tag)
            
            if(len(matches) < 3):
              matches = ['0','0','0']
            year, month, increment = matches
            current_year = datetime.today().year
            current_month = datetime.today().month
            if(int(year) == current_year and int(month) == current_month):
                count = int(increment) + 1
            version = f'v{current_year}.{current_month}.{count}'
            print(version)
            ")
            echo "version=$version" >> $GITHUB_ENV
      - name: Create Release Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $version
          gh release create "$version" \
              --repo="${{ github.repository }}" \
              --title="$version" \
              --notes "Release notes for version $version" \
              --notes-start-tag $latest_tag \
              --generate-notes \
              --target "$GITHUB_SHA"
